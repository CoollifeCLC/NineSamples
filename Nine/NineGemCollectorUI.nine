<!-- .nine content starts here --> // Ignore compile error for now

<div id="ui">
  <div id="timer">‚è±Ô∏è Time: 0s</div>
  <button id="restart">üîÑ Restart</button>
  <div id="minimap"></div>
</div>

<canvas id="dungeon" width="1536" height="640"></canvas>

<style>
  body {
    margin: 0;
    background: #111;
    color: white;
    font-family: 'Segoe UI', sans-serif;
    overflow: hidden;
  }
  #ui {
    position: fixed;
    top: 10px;
    left: 10px;
    z-index: 10;
  }
  #timer {
    font-size: 1.2rem;
    margin-bottom: 10px;
  }
  #restart {
    padding: 6px 12px;
    background: #ff4081;
    border: none;
    color: white;
    font-weight: bold;
    cursor: pointer;
    border-radius: 4px;
  }
  #minimap {
    margin-top: 10px;
    background: #222;
    padding: 5px;
    font-size: 10px;
    line-height: 10px;
  }
</style>

<script type="module">
  const TILE_SIZE = 64;
  let playerX = 3, playerY = 1;
  let timer = 0;
  let interval;

  let map = [
    "########################",
    "#..P......G..........G.#",
    "#..####.............####",
    "#.......G........G......#",
    "#..####..####..####..###",
    "#..........G........G...#",
    "#..####..####..####..###",
    "#...G......G........G...#",
    "#............G..........#",
    "########################"
  ];

  const tileMap = {
    "#": "üü•",
    ".": "‚¨õ",
    "P": "üßç",
    "G": "üíé"
  };

  const canvas = document.getElementById("dungeon");
  const ctx = canvas.getContext("2d");

  function replaceChar(str, index, char) {
    return str.substring(0, index) + char + str.substring(index + 1);
  }

  function renderMap() {
    requestAnimationFrame(() => {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      ctx.font = "48px monospace";

      for (let y = 0; y < map.length; y++) {
        for (let x = 0; x < map[y].length; x++) {
          const char = map[y][x];
          ctx.fillText(tileMap[char] || "‚¨õ", x * TILE_SIZE, (y + 1) * TILE_SIZE - 10);
        }
      }

      updateMinimap();
    });
  }

  let miniTimeout;
  function updateMinimap() {
    clearTimeout(miniTimeout);
    miniTimeout = setTimeout(() => {
      const mini = map.map(row =>
        [...row].map(c => c === "P" ? "üßç" : c === "G" ? "üíé" : c === "#" ? "üü•" : "‚¨õ").join("")
      ).join("<br>");
      document.getElementById("minimap").innerHTML = mini;
    }, 50);
  }

  function checkVictory() {
    const gemsLeft = map.flatMap(r => [...r]).filter(c => c === "G").length;
    if (gemsLeft === 0) {
      clearInterval(interval);
      setTimeout(() => alert(`üéâ Victory! All gems collected in ${timer}s.`), 100);
    }
  }

  function movePlayer(dx, dy) {
    const newX = playerX + dx;
    const newY = playerY + dy;
    const target = map[newY][newX];
    if (target === "#") return;
    if (target === "G") console.log("üíé Collected!");

    map[playerY] = replaceChar(map[playerY], playerX, ".");
    map[newY] = replaceChar(map[newY], newX, "P");
    playerX = newX;
    playerY = newY;

    renderMap();
    checkVictory();
  }

  document.addEventListener("keydown", e => {
    if (e.key === "ArrowUp") movePlayer(0, -1);
    if (e.key === "ArrowDown") movePlayer(0, 1);
    if (e.key === "ArrowLeft") movePlayer(-1, 0);
    if (e.key === "ArrowRight") movePlayer(1, 0);
  });

  document.getElementById("restart").addEventListener("click", () => {
    location.reload();
  });

  interval = setInterval(() => {
    timer++;
    document.getElementById("timer").textContent = `‚è±Ô∏è Time: ${timer}s`;
  }, 1000);

  renderMap();
</script>
