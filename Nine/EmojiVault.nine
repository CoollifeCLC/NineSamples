<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Emoji Vault Game</title>
  <style>
    body {
      margin: 0;
      background: #111;
      color: white;
      font-family: 'Segoe UI', sans-serif;
      overflow: hidden;
    }
    #ui {
      position: fixed;
      top: 10px;
      left: 10px;
      z-index: 10;
    }
    #timer {
      font-size: 1.2rem;
      margin-bottom: 10px;
    }
    #restart {
      padding: 6px 12px;
      background: #ff4081;
      border: none;
      color: white;
      font-weight: bold;
      cursor: pointer;
      border-radius: 4px;
    }
    #minimap {
      margin-top: 10px;
      background: #222;
      padding: 5px;
      font-size: 10px;
      line-height: 10px;
    }
  </style>
</head>
<body>

<div id="ui">
  <div id="timer">‚è±Ô∏è Time: 0s</div>
  <button id="restart">üîÑ Restart</button>
  <div id="minimap"></div>
</div>

<script>
// Map
let originalMap = [
  "########################",
  "#..P......G..........G.#",
  "#..####.............####",
  "#.......G........G......#",
  "#..####..####..####..###",
  "#..........G........G...#",
  "#..####..####..####..###",
  "#...G......G........G...#",
  "#............G..........#",
  "########################"
];

let map, playerX, playerY, timerInterval, secondsElapsed;

const TILE_SIZE = 64;
const canvas = document.createElement("canvas");
const ctx = canvas.getContext("2d");

canvas.width = TILE_SIZE * originalMap[0].length;
canvas.height = TILE_SIZE * originalMap.length;
document.body.appendChild(canvas);

const tileMap = {
  "#": "üß±", ".": "üåë", "P": "üïµÔ∏è‚Äç‚ôÇÔ∏è", "G": "üí∞"
};

function startGame() {
  map = [...originalMap];
  playerX = 3;
  playerY = 1;
  secondsElapsed = 0;
  updateTimer();
  renderMap();
  renderMiniMap();
  clearInterval(timerInterval);
  timerInterval = setInterval(() => {
    secondsElapsed++;
    updateTimer();
  }, 1000);
}

function updateTimer() {
  document.getElementById("timer").innerText = `‚è±Ô∏è Time: ${secondsElapsed}s`;
}

function renderMap() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  ctx.font = "48px monospace";
  for (let y = 0; y < map.length; y++) {
    for (let x = 0; x < map[y].length; x++) {
      const char = map[y][x];
      ctx.fillText(tileMap[char] || tileMap["."], x * TILE_SIZE, (y + 1) * TILE_SIZE - 10);
    }
  }
}

function movePlayer(dx, dy) {
  const newX = playerX + dx;
  const newY = playerY + dy;
  const targetTile = map[newY][newX];

  if (targetTile === "#") return;

  if (targetTile === "G") {
    console.log("üí∞ Treasure collected!");
  }

  map[playerY] = replaceChar(map[playerY], playerX, ".");
  map[newY] = replaceChar(map[newY], newX, "P");
  playerX = newX;
  playerY = newY;

  renderMap();
  renderMiniMap();
  checkVictory();
}

function replaceChar(str, index, newChar) {
  return str.substring(0, index) + newChar + str.substring(index + 1);
}

function checkVictory() {
  const treasuresLeft = map.flatMap(row => [...row]).filter(c => c === "G").length;
  if (treasuresLeft === 0) {
    clearInterval(timerInterval);
    setTimeout(() => {
      alert(`üéâ Vault Cleared! Time: ${secondsElapsed}s`);
    }, 100);
  }
}

function renderMiniMap() {
  const minimap = map.map((row, y) =>
    [...row].map((c, x) =>
      x === playerX && y === playerY ? "üßç" : c === "G" ? "üí∞" : c === "#" ? "‚¨ú" : "‚¨õ"
    ).join("")
  ).join("<br>");
  document.getElementById("minimap").innerHTML = minimap;
}

document.addEventListener("keydown", (e) => {
  if (e.key === "ArrowUp") movePlayer(0, -1);
  if (e.key === "ArrowDown") movePlayer(0, 1);
  if (e.key === "ArrowLeft") movePlayer(-1, 0);
  if (e.key === "ArrowRight") movePlayer(1, 0);
});

document.getElementById("restart").addEventListener("click", startGame);

// Go!
startGame();
</script>

</body>
</html>
